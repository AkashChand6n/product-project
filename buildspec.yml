version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    ECR_ACCOUNT_ID: 156041402660
    BACKEND_IMAGE_NAME: product-backend
    FRONTEND_IMAGE_NAME: product-frontend
    SONAR_HOST_URL: http://44.204.129.61
    SONAR_TOKEN: sqp_c83454a4a6dc236ca147d7e3203a22eb55daa5dc

phases:
  install:
    commands:
      - echo "Starting install phase..."
      - set -e
      - if command -v yum >/dev/null 2>&1; then yum install -y jq; fi
      - if command -v apt-get >/dev/null 2>&1; then apt-get update && apt-get install -y jq; fi
      - echo Logging in to Docker Hub...
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Installing SonarScanner for .NET..."
      - dotnet tool install --global dotnet-sonarscanner
      - export PATH="$PATH:/root/.dotnet/tools"

  pre_build:
    commands:
      - echo "Setting version tag..."
      - VERSION_TAG=v$CODEBUILD_BUILD_NUMBER
      - export VERSION_TAG
      - echo "Version tag is $VERSION_TAG"

  build:
    commands:
      - echo "Running SonarQube scan..."
      - cd Products_Backend
      - dotnet sonarscanner begin /k:"Dotnet" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.login="$SONAR_TOKEN"
      - dotnet build
      - dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
      - echo "Building backend image..."
      - docker build -t $BACKEND_IMAGE_NAME:$VERSION_TAG .
      - docker tag $BACKEND_IMAGE_NAME:$VERSION_TAG $ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$BACKEND_IMAGE_NAME:$VERSION_TAG
      - cd ..

      - echo "Building frontend image..."
      - cd Products_UI
      - docker build -t $FRONTEND_IMAGE_NAME:$VERSION_TAG .
      - docker tag $FRONTEND_IMAGE_NAME:$VERSION_TAG $ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_IMAGE_NAME:$VERSION_TAG
      - cd ..

  post_build:
    commands:
      - echo "Pushing backend to ECR..."
      - docker push $ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$BACKEND_IMAGE_NAME:$VERSION_TAG

      - echo "Pushing frontend to ECR..."
      - docker push $ECR_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_IMAGE_NAME:$VERSION_TAG

      - echo "Copying Kubernetes manifests to workspace root..."
      - cp cloudformation_deploy/backend-deployment.yaml .
      - cp cloudformation_deploy/frontend-deployment.yaml .
      - cp cloudformation_deploy/ingress.yaml . || echo "ingress.yaml already in root, skipping copy"

      - echo "Final workspace contents:"
      - ls -lh

artifacts:
  files:
    - backend-deployment.yaml
    - frontend-deployment.yaml
    - ingress.yaml
